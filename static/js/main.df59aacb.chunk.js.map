{"version":3,"sources":["assets/icon1.svg","assets sync nonrecursive //.svg$","assets/icon10.svg","assets/icon11.svg","assets/icon12.svg","assets/icon13.svg","assets/icon14.svg","assets/icon15.svg","assets/icon16.svg","assets/icon17.svg","assets/icon18.svg","assets/icon19.svg","assets/icon2.svg","assets/icon20.svg","assets/icon21.svg","assets/icon22.svg","assets/icon23.svg","assets/icon24.svg","assets/icon25.svg","assets/icon26.svg","assets/icon27.svg","assets/icon28.svg","assets/icon29.svg","assets/icon3.svg","assets/icon30.svg","assets/icon31.svg","assets/icon32.svg","assets/icon33.svg","assets/icon34.svg","assets/icon35.svg","assets/icon36.svg","assets/icon37.svg","assets/icon38.svg","assets/icon39.svg","assets/icon4.svg","assets/icon40.svg","assets/icon41.svg","assets/icon42.svg","assets/icon43.svg","assets/icon44.svg","assets/icon45.svg","assets/icon46.svg","assets/icon47.svg","assets/icon48.svg","assets/icon49.svg","assets/icon5.svg","assets/icon50.svg","assets/icon6.svg","assets/icon7.svg","assets/icon8.svg","assets/icon9.svg","reducers/slices/users.js","reducers/slices/channels.js","data-handling/cache.js","reducers/slices/messages.js","reducers/slices/appStatus.js","reducers/thunks/buildMessages.js","config/server-url.js","components/Header.js","assets/icon-provider.js","components/UserIcon.js","components/UserDetails.js","components/Conversations.js","components/AddChannelBtn.js","modules/userDetailsGetters.js","components/ChatContent.js","components/Chat.js","components/Users.js","components/Footer.js","components/App.js","reportWebVitals.js","reducers/rootReducer.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","users","createSlice","name","initialState","clientId","clientBlocked","list","reducers","setList","state","action","payload","setClientId","setSpamBlock","getClientName","match","find","user","getClientIcon","icon","getClientColor","color","actions","channels","active","usersTyping","setChannelsList","setActiveChannel","setUsersTyping","addTypingUser","userId","removeUserTyping","filter","cachedMessages","getFromCache","channelId","messageId","cacheControl","parsedSequence","missingInCache","forEach","identifier","push","saveMessagesInCache","messageObjArray","obj","messageObj","saveInCache","messages","constructed","new","setConstructedMessages","addOneNewInChannel","container","clearAllNew","appStatus","connected","statusText","setConnectedStatus","setStatusText","buildMessages","sequence","retrieveMessages","dispatch","getState","a","split","str","nr","parseInt","length","newMessages","console","log","stagedMessages","nodeEnv","process","serverPaths","production","development","getServer","Header","children","className","files","require","icons","key","string","replace","UserIcon","background","status","size","margin","style","width","minWidth","height","minHeight","backgroundColor","src","default","failSafeIcon","alt","UserDetails","setUserName","useSelector","useState","usernameEdit","setUsernameEdit","inputValue","setInputValue","clientName","clientColor","clientIcon","useEffect","input","document","querySelector","focus","onSubmit","preventDefault","type","value","onChange","target","onBlur","autoComplete","required","onClick","disabled","Conversations","emitActiveConversation","channelsList","activeConversation","newInChannel","matchedEntry","entry","shouldDisplay","channel","label","AddChannelBtn","createChannel","edit","setEdit","getName","userlist","getColor","getIcon","ChatContent","timeString","dateObj","Date","getHours","getMinutes","formatTimeStamp","date","textContent","Chat","send","alertTyping","currentChannel","matchedChannel","spamBlock","message","setMessage","usersList","filtered","alert","index","scrollTop","scrollHeight","opacity","placeholder","Users","online","Footer","href","title","App","useDispatch","client","useRef","messageIdArray","Promise","current","emit","responseArray","io","socket","on","usersArray","channelsArray","receivedId","usersTypingArray","close","newUsername","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","combineReducers","store","configureStore","reducer","rootReducer","middleware","thunk","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.df59aacb.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/icon1.be78a816.svg\";","var map = {\n\t\"./icon1.svg\": 25,\n\t\"./icon10.svg\": 96,\n\t\"./icon11.svg\": 97,\n\t\"./icon12.svg\": 98,\n\t\"./icon13.svg\": 99,\n\t\"./icon14.svg\": 100,\n\t\"./icon15.svg\": 101,\n\t\"./icon16.svg\": 102,\n\t\"./icon17.svg\": 103,\n\t\"./icon18.svg\": 104,\n\t\"./icon19.svg\": 105,\n\t\"./icon2.svg\": 106,\n\t\"./icon20.svg\": 107,\n\t\"./icon21.svg\": 108,\n\t\"./icon22.svg\": 109,\n\t\"./icon23.svg\": 110,\n\t\"./icon24.svg\": 111,\n\t\"./icon25.svg\": 112,\n\t\"./icon26.svg\": 113,\n\t\"./icon27.svg\": 114,\n\t\"./icon28.svg\": 115,\n\t\"./icon29.svg\": 116,\n\t\"./icon3.svg\": 117,\n\t\"./icon30.svg\": 118,\n\t\"./icon31.svg\": 119,\n\t\"./icon32.svg\": 120,\n\t\"./icon33.svg\": 121,\n\t\"./icon34.svg\": 122,\n\t\"./icon35.svg\": 123,\n\t\"./icon36.svg\": 124,\n\t\"./icon37.svg\": 125,\n\t\"./icon38.svg\": 126,\n\t\"./icon39.svg\": 127,\n\t\"./icon4.svg\": 128,\n\t\"./icon40.svg\": 129,\n\t\"./icon41.svg\": 130,\n\t\"./icon42.svg\": 131,\n\t\"./icon43.svg\": 132,\n\t\"./icon44.svg\": 133,\n\t\"./icon45.svg\": 134,\n\t\"./icon46.svg\": 135,\n\t\"./icon47.svg\": 136,\n\t\"./icon48.svg\": 137,\n\t\"./icon49.svg\": 138,\n\t\"./icon5.svg\": 139,\n\t\"./icon50.svg\": 140,\n\t\"./icon6.svg\": 141,\n\t\"./icon7.svg\": 142,\n\t\"./icon8.svg\": 143,\n\t\"./icon9.svg\": 144\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 95;","export default __webpack_public_path__ + \"static/media/icon10.7b6cb582.svg\";","export default __webpack_public_path__ + \"static/media/icon11.c4e447fa.svg\";","export default __webpack_public_path__ + \"static/media/icon12.34ac38ad.svg\";","export default __webpack_public_path__ + \"static/media/icon13.b807f680.svg\";","export default __webpack_public_path__ + \"static/media/icon14.9b9fdef1.svg\";","export default __webpack_public_path__ + \"static/media/icon15.8a899c72.svg\";","export default __webpack_public_path__ + \"static/media/icon16.cfd56a7b.svg\";","export default __webpack_public_path__ + \"static/media/icon17.96da9cd4.svg\";","export default __webpack_public_path__ + \"static/media/icon18.00308d4c.svg\";","export default __webpack_public_path__ + \"static/media/icon19.e39fc14b.svg\";","export default __webpack_public_path__ + \"static/media/icon2.23fce968.svg\";","export default __webpack_public_path__ + \"static/media/icon20.5edc3050.svg\";","export default __webpack_public_path__ + \"static/media/icon21.2e62f7bd.svg\";","export default __webpack_public_path__ + \"static/media/icon22.c2953a5e.svg\";","export default __webpack_public_path__ + \"static/media/icon23.bf39ce58.svg\";","export default __webpack_public_path__ + \"static/media/icon24.47e5020a.svg\";","export default __webpack_public_path__ + \"static/media/icon25.38aeadd6.svg\";","export default __webpack_public_path__ + \"static/media/icon26.1ee31e9c.svg\";","export default __webpack_public_path__ + \"static/media/icon27.d7c6887f.svg\";","export default __webpack_public_path__ + \"static/media/icon28.b5b90c1d.svg\";","export default __webpack_public_path__ + \"static/media/icon29.f930cc1f.svg\";","export default __webpack_public_path__ + \"static/media/icon3.7dcb6761.svg\";","export default __webpack_public_path__ + \"static/media/icon30.a06620a2.svg\";","export default __webpack_public_path__ + \"static/media/icon31.1ba79db4.svg\";","export default __webpack_public_path__ + \"static/media/icon32.7d284c1b.svg\";","export default __webpack_public_path__ + \"static/media/icon33.9742d126.svg\";","export default __webpack_public_path__ + \"static/media/icon34.7d8098fb.svg\";","export default __webpack_public_path__ + \"static/media/icon35.1c8cde62.svg\";","export default __webpack_public_path__ + \"static/media/icon36.bf625fe0.svg\";","export default __webpack_public_path__ + \"static/media/icon37.d9166e4d.svg\";","export default __webpack_public_path__ + \"static/media/icon38.cd397d5e.svg\";","export default __webpack_public_path__ + \"static/media/icon39.b572e9c6.svg\";","export default __webpack_public_path__ + \"static/media/icon4.905fe3e8.svg\";","export default __webpack_public_path__ + \"static/media/icon40.d78bfd96.svg\";","export default __webpack_public_path__ + \"static/media/icon41.784bf6f8.svg\";","export default __webpack_public_path__ + \"static/media/icon42.420ccc43.svg\";","export default __webpack_public_path__ + \"static/media/icon43.87b3c1df.svg\";","export default __webpack_public_path__ + \"static/media/icon44.0efbf879.svg\";","export default __webpack_public_path__ + \"static/media/icon45.e88afedb.svg\";","export default __webpack_public_path__ + \"static/media/icon46.36b47cd7.svg\";","export default __webpack_public_path__ + \"static/media/icon47.62a72054.svg\";","export default __webpack_public_path__ + \"static/media/icon48.57a483fd.svg\";","export default __webpack_public_path__ + \"static/media/icon49.6d1bc615.svg\";","export default __webpack_public_path__ + \"static/media/icon5.2fa1db86.svg\";","export default __webpack_public_path__ + \"static/media/icon50.c017f087.svg\";","export default __webpack_public_path__ + \"static/media/icon6.86e58767.svg\";","export default __webpack_public_path__ + \"static/media/icon7.ffece1cc.svg\";","export default __webpack_public_path__ + \"static/media/icon8.840f8a8e.svg\";","export default __webpack_public_path__ + \"static/media/icon9.f46af93f.svg\";","import { createSlice } from '@reduxjs/toolkit';\n\nconst users = createSlice({\n  name: 'users',\n  initialState: {\n    clientId: null,\n    clientBlocked: false,\n    list: [],\n  },\n  reducers: {\n    setList(state, action) {\n      state.list = action.payload;\n    },\n    setClientId(state, action) {\n      state.clientId = action.payload;\n    },\n    setSpamBlock(state, action) {\n      state.clientBlocked = action.payload;\n    }\n  },\n});\n\nconst getClientName = ({ users }) => {\n  const { clientId, list } = users;\n  const match = list.find(user => user.id === clientId);\n  return match ? match.name : '. . .';\n};\n\nconst getClientIcon = ({ users }) => {\n  const { clientId, list } = users;\n  const match = list.find(user => user.id === clientId);\n  if (match && match.icon) {\n    return match.icon;\n  }\n  return '0';\n};\n\nconst getClientColor = ({ users }) => {\n  const { clientId, list } = users;\n  const match = list.find(user => user.id === clientId);\n  return match ? match.color : '#89f0a4';\n};\n\nexport { getClientName, getClientIcon, getClientColor };\n\nexport const { setList, setClientId, setSpamBlock } = users.actions;\n\nexport default users.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst channels = createSlice({\n  name: 'channels',\n  initialState: {\n    active: 0,\n    list: [],\n    usersTyping: [],\n  },\n  reducers: {\n    setChannelsList(state, action) {\n      state.list = action.payload;\n    },\n    setActiveChannel(state, action) {\n      state.active = action.payload;\n    },\n    setUsersTyping(state, action) {\n      state.usersTyping = action.payload;\n    },\n    addTypingUser(state, action) {\n      const userId = action.payload;\n      state.usersTyping = [...state.usersTyping, userId];\n    },\n    removeUserTyping(state, action) {\n      const userId = action.payload;\n      state.usersTyping = state.usersTyping.filter(id => id !== userId);\n    },\n  },\n});\n\nexport const { setChannelsList, setActiveChannel, setUsersTyping, addTypingUser, removeUserTyping } = channels.actions;\n\nexport default channels.reducer;\n","let cachedMessages = {};\n\nconst getFromCache = (channelId, messageId) => {\n  if (cachedMessages[channelId] && cachedMessages[channelId][messageId]) {\n    return cachedMessages[channelId][messageId];\n  }\n  return null;\n};\n\nconst saveInCache = (channelId, messageObj) => {\n  if (cachedMessages[channelId]) {\n    cachedMessages[channelId][messageObj.messageId] = messageObj;\n  } else {\n    cachedMessages[channelId] = { [messageObj.messageId]: messageObj };\n  }\n};\n\nconst clearCache = () => {\n  cachedMessages = {};\n};\n\nconst cacheControl = (parsedSequence, channelId) => {\n  const missingInCache = [];\n  parsedSequence.forEach(identifier => {\n    const cachedMessage = getFromCache(channelId, identifier);\n    if (!cachedMessage) {\n      missingInCache.push(identifier);\n    }\n  });\n  return missingInCache;\n};\n\nconst saveMessagesInCache = (channelId, messageObjArray) => {\n  messageObjArray.forEach(obj => saveInCache(channelId, obj));\n};\n\nexport { getFromCache, saveInCache, clearCache, cacheControl, saveMessagesInCache };\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst messages = createSlice({\n  name: 'messages',\n  initialState: {\n    constructed: [],\n    new: [],\n  },\n  reducers: {\n    setConstructedMessages(state, action) {\n      state.constructed = action.payload;\n    },\n    addOneNewInChannel(state, action) {\n      const channelId = action.payload;\n      const match = state.new.find(container => container.id === channelId);\n      if (match) {\n        match.new += 1;\n      } else {\n        state.new.push({ id: channelId, new: 1 });\n      }\n    },\n    clearAllNew(state, action) {\n      const channelId = action.payload;\n      const match = state.new.find(container => container.id === channelId);\n      if (match) {\n        match.new = 0;\n      }\n    },\n  },\n});\n\nexport const { setConstructedMessages, addOneNewInChannel, clearAllNew } = messages.actions;\n\nexport default messages.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst appStatus = createSlice({\n  name: 'appStatus',\n  initialState: {\n    connected: false,\n    statusText: 'Connecting to server, please wait...',\n  },\n  reducers: {\n    setConnectedStatus(state, action) {\n      state.connected = action.payload;\n    },\n    setStatusText(state, action) {\n      state.statusText = action.payload;\n    },\n  },\n});\n\nexport const { setConnectedStatus, setStatusText } = appStatus.actions;\n\nexport default appStatus.reducer;\n","import { getFromCache, cacheControl, saveMessagesInCache } from 'data-handling/cache';\nimport { setConstructedMessages } from 'reducers/slices/messages';\nimport { setConnectedStatus, setStatusText } from 'reducers/slices/appStatus';\n\nconst buildMessages = (sequence, channelId, retrieveMessages) => {\n  return async (dispatch, getState) => {\n    const { active } = getState().channels;\n    if (active !== channelId) {\n      dispatch(setConnectedStatus(false));\n      dispatch(setStatusText('Retrieving messages...'));\n    }\n    const parsedSequence = sequence\n      .split('-')\n      .filter(str => str !== '')\n      .map(nr => parseInt(nr, 10));\n    const missingInCache = cacheControl(parsedSequence, channelId);\n    if (missingInCache.length > 0) {\n      const newMessages = await retrieveMessages(channelId, missingInCache);\n      console.log('Had to retreive messages from the server', newMessages.length);\n      saveMessagesInCache(channelId, newMessages);\n    }\n    const stagedMessages = [];\n    parsedSequence.forEach(identifier => stagedMessages.push(getFromCache(channelId, identifier)));\n    dispatch(setConstructedMessages(stagedMessages));\n    dispatch(setConnectedStatus(true));\n  };\n};\n\nexport default buildMessages;\n","const nodeEnv = process.env.NODE_ENV;\n\nconst serverPaths = {\n  production: 'https://tiny-conversation.herokuapp.com',\n  development: 'http://localhost:8080',\n}\n\nconst getServer = () => serverPaths[nodeEnv] ? serverPaths[nodeEnv] : serverPaths.development;\n\nexport default getServer;\n\n\n","import React from 'react';\nimport 'components/Header.scss';\n\nconst Header = ({ children }) => {\n  return (\n    <header className='header'>\n      <div className=\"header__left\">\n        <i className='far fa-comment-dots header__icon'></i>\n        <h1 className='header__title'>conversations</h1>\n      </div>\n      {children}\n    </header>\n  );\n};\n\nexport default Header;\n","import failSafeIcon from 'assets/icon1.svg'\nconst files = require.context('assets', false, /\\.svg$/);\n\nconst icons = {};\n\nconst tidyFilename = string => string.replace('./', '').replace('.svg', '').replace('icon', '');\n\nfiles.keys().forEach(key => {\n  icons[tidyFilename(key)] = files(key);\n});\n\nconst exportIcon = id => icons[id] ? icons[id].default : failSafeIcon;\n\nexport { exportIcon };\n","import React from 'react';\nimport { exportIcon } from 'assets/icon-provider';\n\nimport 'components/UserIcon.scss';\n\nconst UserIcon = ({ icon = 3, background = '#89f0a4', status = false, size = '3rem', margin = '0.5rem' }) => {\n  return (\n    <div\n      className='usericon'\n      style={{ width: size, minWidth: size, height: size, minHeight: size, backgroundColor: background, margin }}\n    >\n      <img src={exportIcon(icon)} alt='temp' className='usericon__svg' />\n      {status && <div className='usericon__status'></div>}\n    </div>\n  );\n};\n\nexport default UserIcon;\n","import React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { getClientName, getClientColor, getClientIcon } from 'reducers/slices/users';\nimport UserIcon from 'components/UserIcon';\n\nconst UserDetails = ({ setUserName }) => {\n  const connected = useSelector(({ appStatus }) => appStatus.connected);\n  const [usernameEdit, setUsernameEdit] = useState(false);\n  const [inputValue, setInputValue] = useState('');\n  const clientName = useSelector(getClientName);\n  const clientColor = useSelector(getClientColor);\n  const clientIcon = useSelector(getClientIcon);\n\n  useEffect(() => {\n    const input = document.querySelector('.header__username-input');\n    if (input) {\n      input.focus();\n    }\n  });\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setUserName(inputValue);\n    setInputValue('');\n    setUsernameEdit(false);\n  };\n\n  const startEdit = () => {\n    setInputValue(clientName);\n    setUsernameEdit(true);\n  };\n\n  return (\n    <div className='header__user'>\n      {usernameEdit ? (\n        <form onSubmit={handleSubmit}>\n          <input\n            type='text'\n            value={inputValue}\n            onChange={e => setInputValue(e.target.value)}\n            onBlur={() => setUsernameEdit(false)}\n            className='header__username-input'\n            autoComplete='off'\n            required\n          />\n        </form>\n      ) : (\n        <button className='header__name-btn' onClick={startEdit} disabled={!connected}>\n          {clientName}\n        </button>\n      )}\n      <UserIcon icon={clientIcon} background={clientColor} status />\n    </div>\n  );\n};\n\nexport default UserDetails;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport 'components/Conversations.scss';\n\nconst Conversations = ({ emitActiveConversation, children }) => {\n  const connected = useSelector(({ appStatus }) => appStatus.connected);\n  const newMessages = useSelector(({ messages }) => messages.new);\n  const channelsList = useSelector(({ channels }) => channels.list);\n  const activeConversation = useSelector(({ channels }) => channels.active);\n  const btnClass = id => {\n    const status = id === activeConversation ? 'active' : 'inactive';\n    return `conversations__channelBtn conversations__channelBtn--${status}`;\n  };\n\n  const newInChannel = id => {\n    const matchedEntry = newMessages.find(entry => entry.id === id);\n    if (matchedEntry && matchedEntry.new > 0) {\n      return matchedEntry.new;\n    }\n    return '';\n  };\n\n  const shouldDisplay = id => id !== activeConversation;\n\n  return (\n    <nav className='conversations'>\n      {channelsList.map(channel => (\n        <button className={btnClass(channel.id)} key={channel.id} onClick={() => emitActiveConversation(channel.id)} disabled={!connected}>\n          <span>#</span>\n          {channel.label}\n          {shouldDisplay(channel.id) && newInChannel(channel.id) !== '' && (\n            <span className='conversations__new'>{newInChannel(channel.id)}</span>\n          )}\n        </button>\n      ))}\n      {children}\n    </nav>\n  );\n};\n\nexport default Conversations;\n","import React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\n\nconst AddChannelBtn = ({ createChannel }) => {\n  const connected = useSelector(({ appStatus }) => appStatus.connected);\n  const [edit, setEdit] = useState(false);\n  const [inputValue, setInputValue] = useState('');\n\n  useEffect(() => {\n    const input = document.querySelector('.conversations__add-channel-input');\n    if (input) {\n      input.focus();\n    }\n  });\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    createChannel(inputValue);\n    setInputValue('');\n    setEdit(false);\n  };\n\n  return (\n    <div className='conversations__add-channel'>\n      {edit ? (\n        <form onSubmit={handleSubmit} className='conversations__add-channel-form'>\n          <input\n            type='text'\n            onBlur={() => {\n              setEdit(false);\n              setInputValue('');\n            }}\n            className='conversations__add-channel-input'\n            value={inputValue}\n            onChange={e => setInputValue(e.target.value)}\n            required\n          />\n        </form>\n      ) : (\n        <button className='conversations__add-channel-btn' onClick={() => setEdit(true)} disabled={!connected}>\n          + Add Channel\n        </button>\n      )}\n    </div>\n  );\n};\n\nexport default AddChannelBtn;\n","const getName = (id, userlist) => {\n  const match = userlist.find(user => user.id === id);\n  return match ? match.name : '. . .';\n};\n\nconst getColor = (id, userlist) => {\n  const match = userlist.find(user => user.id === id);\n  return match ? match.color : '#89f0a4';\n};\n\nconst getIcon = (id, userlist) => {\n  const match = userlist.find(user => user.id === id);\n  if (match && match.icon) {\n    return match.icon;\n  }\n  return '0';\n};\n\nexport { getName, getColor, getIcon };\n","import React from 'react';\n\nconst ChatContent = ({ user, messageObj, children }) => {\n  const formatTimeStamp = timeString => {\n    const dateObj = new Date(timeString);\n    return (\n      (dateObj.getHours() < 10 ? `0${dateObj.getHours()}` : dateObj.getHours()) +\n      ':' +\n      (dateObj.getMinutes() < 10 ? `0${dateObj.getMinutes()}` : dateObj.getMinutes())\n    );\n  };\n\n  return (\n    <div className='chat__content'>\n      <div className='chat__left'>{children}</div>\n      <div className='chat__right'>\n        <div className='chat__pointer'></div>\n        <div className='chat__content-header'>\n          <p className='chat__nametag'>{user}</p>\n          <p className='chat__timetag'>{formatTimeStamp(messageObj.date)}</p>\n        </div>\n        <p className='chat__texttag'>{messageObj.textContent}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatContent;\n","import React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { getName, getIcon, getColor } from 'modules/userDetailsGetters';\n\nimport ChatContent from 'components/ChatContent';\nimport UserIcon from 'components/UserIcon';\nimport 'components/Chat.scss';\n\nconst Chat = ({ send, alertTyping }) => {\n  const appStatus = useSelector(({ appStatus }) => appStatus);\n  const messages = useSelector(({ messages }) => messages.constructed);\n  const currentChannel = useSelector(({ channels }) => {\n    const matchedChannel = channels.list.find(channel => channel.id === channels.active);\n    return matchedChannel ? matchedChannel.label : '';\n  });\n  const spamBlock = useSelector(({ users }) => users.clientBlocked);\n  const [message, setMessage] = useState('');\n  const usersList = useSelector(({ users }) => users.list);\n  const usersTyping = useSelector(state => {\n    const { clientId } = state.users;\n    const { usersTyping } = state.channels;\n    const usersList = state.users.list;\n    const filtered = usersTyping.filter(id => id !== clientId);\n    if (filtered.length === 1) {\n      return `${getName(filtered[0], usersList)} is typing`;\n    }\n    if (filtered.length < 3) {\n      let alert = '';\n      filtered.forEach((user, index) => {\n        if (index !== filtered.length - 1) {\n          alert += `${getName(user, usersList)}, `;\n        } else {\n          alert += `and ${getName(user, usersList)} are typing`;\n        }\n      });\n      return alert;\n    }\n    return 'Several people are typing';\n  });\n\n  useEffect(() => {\n    const container = document.querySelector('.chat__messages');\n    container.scrollTop = container.scrollHeight;\n  });\n\n  const onSubmit = e => {\n    e.preventDefault();\n    send(message);\n    setMessage('');\n  };\n\n  const handleOnChange = e => {\n    alertTyping();\n    setMessage(e.target.value);\n  };\n\n  return (\n    <main className='chat'>\n      <h2 className='chat__channeltag'>\n        <span style={{ opacity: currentChannel !== '' ? '1' : '0' }}>#</span>\n        {currentChannel}\n      </h2>\n      <div className='chat__messages'>\n        {appStatus.connected ? (\n          messages.map(messageObj => (\n            <ChatContent\n              user={getName(messageObj.userId, usersList)}\n              messageObj={messageObj}\n              key={messageObj.messageId}\n            >\n              <UserIcon\n                icon={getIcon(messageObj.userId, usersList)}\n                size='2.3rem'\n                margin='0'\n                background={getColor(messageObj.userId, usersList)}\n              />\n            </ChatContent>\n          ))\n        ) : (\n          <div className='chat__loadingdiv'>\n            <i className='fas fa-sync-alt chat__loadingicon'></i>\n            <p className='chat__loadingtext'>{appStatus.statusText}</p>\n          </div>\n        )}\n      </div>\n      <div className='chat__form-container'>\n        {usersTyping !== '' && (\n          <p className='chat__typingalert'>\n            {usersTyping}\n            <span className='chat__dot1'>.</span>\n            <span className='chat__dot2'>.</span>\n            <span className='chat__dot3'>.</span>\n          </p>\n        )}\n        <form className='chat__form' onSubmit={onSubmit}>\n          <input\n            type='text'\n            className='chat__input'\n            value={message}\n            onChange={handleOnChange}\n            required\n            disabled={spamBlock || !appStatus.connected}\n            placeholder={spamBlock ? 'Please hold back a bit on your messages!' : 'Type here!'}\n            style={{ opacity: appStatus.connected ? 1 : 0.35 }}\n          />\n          <button className='chat__button' disabled={!appStatus.connected}>\n            Send\n          </button>\n        </form>\n      </div>\n    </main>\n  );\n};\n\nexport default Chat;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport 'components/Users.scss';\n\nimport UserIcon from 'components/UserIcon';\n\nconst Users = () => {\n  const connected = useSelector(({ appStatus }) => appStatus.connected);\n  const userlist = useSelector(({ users }) => users.list.filter(user => user.online));\n  return (\n    <aside className='users'>\n      {userlist.map(user => (\n        <div key={user.id} className='users__row' style={{ opacity: connected ? 1 : 0.35 }}>\n          <UserIcon icon={user.icon} background={user.color} status size='2rem' />\n          <p className='users__nametag'>{user.name}</p>\n        </div>\n      ))}\n    </aside>\n  );\n};\n\nexport default Users;\n","import React from 'react';\nimport 'components/Footer.scss';\n\nconst Footer = () => (\n  <footer className='footer'>\n    <p className='footer__text'>by Oscar Lindqvist</p>\n    <i className='fas fa-circle footer__icon'></i>\n    <p className='footer__text'>\n      Icons made by{' '}\n      <a className='footer__link' href='https://www.freepik.com' title='Freepik'>\n        Freepik\n      </a>{' '}\n      from{' '}\n      <a className='footer__link' href='https://www.flaticon.com/' title='Flaticon'>\n        www.flaticon.com\n      </a>\n    </p>\n  </footer>\n);\n\nexport default Footer;\n","import React, { useRef, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setList, setClientId, setSpamBlock } from 'reducers/slices/users';\nimport {\n  setChannelsList,\n  setActiveChannel,\n  setUsersTyping,\n  addTypingUser,\n  removeUserTyping,\n} from 'reducers/slices/channels';\nimport buildMessages from 'reducers/thunks/buildMessages';\nimport { addOneNewInChannel, clearAllNew } from 'reducers/slices/messages';\nimport { setConnectedStatus, setStatusText } from 'reducers/slices/appStatus';\nimport { io } from 'socket.io-client';\nimport getServer from 'config/server-url';\n\nimport 'components/App.scss';\n\n// components\n\nimport Header from 'components/Header';\nimport UserDetails from 'components/UserDetails';\nimport Conversations from 'components/Conversations';\nimport AddChannelBtn from 'components/AddChannelBtn';\nimport Chat from 'components/Chat';\nimport Users from 'components/Users';\nimport Footer from 'components/Footer';\n\nimport { clearCache } from 'data-handling/cache';\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const activeConversation = useSelector(({ channels }) => channels.active);\n  const client = useRef();\n\n  const retrieveMessages = (channelId, messageIdArray) =>\n    new Promise(resolve => {\n      client.current.emit('need-messages', channelId, messageIdArray, responseArray => {\n        resolve(responseArray);\n      });\n    });\n\n  useEffect(() => {\n    client.current = io(getServer());\n    const socket = client.current;\n    socket.on('is-connected', () => dispatch(setConnectedStatus(true)));\n    socket.on('clear-cache', () => clearCache());\n    socket.on('user-list', usersArray => dispatch(setList(usersArray)));\n    socket.on('channel-list', channelsArray => dispatch(setChannelsList(channelsArray)));\n    socket.on('user-id', receivedId => dispatch(setClientId(receivedId)));\n    socket.on('replace-people-typing-aray', usersTypingArray => dispatch(setUsersTyping(usersTypingArray)));\n    socket.on('user-started-typing', userId => dispatch(addTypingUser(userId)));\n    socket.on('user-stopped-typing', userId => dispatch(removeUserTyping(userId)));\n    socket.on('new-channel-message', channelId => dispatch(addOneNewInChannel(channelId)));\n    socket.on('spam-block', status => dispatch(setSpamBlock(status)));\n    socket.on('new-sequence', (sequence, channelId) => dispatch(buildMessages(sequence, channelId, retrieveMessages)));\n    socket.on('disconnect', () => {\n      dispatch(setConnectedStatus(false));\n      dispatch(setStatusText('Lost connection with server, reconnecting...'));\n    });\n\n    return () => {\n      socket.close();\n    };\n  }, [dispatch]);\n\n  const send = message => {\n    client.current.emit('channel-message', message);\n  };\n\n  const emitActiveConversation = id => {\n    dispatch(clearAllNew(activeConversation));\n    dispatch(setActiveChannel(id));\n    dispatch(clearAllNew(id));\n    client.current.emit('set-channel', id);\n  };\n\n  const createChannel = label => {\n    client.current.emit('create-channel', label);\n  };\n\n  const setUserName = newUsername => {\n    client.current.emit('update-name', newUsername);\n  };\n\n  const alertTyping = () => {\n    client.current.emit('is-typing');\n  };\n\n  return (\n    <>\n      <div className='filler-div'></div>\n      <div className='app'>\n        <Header>\n          <UserDetails setUserName={setUserName} />\n        </Header>\n        <Conversations emitActiveConversation={emitActiveConversation}>\n          <AddChannelBtn createChannel={createChannel} />\n        </Conversations>\n        <Chat send={send} alertTyping={alertTyping} />\n        <Users />\n      </div>\n      <Footer />\n    </>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from 'redux';\nimport users from 'reducers/slices/users';\nimport channels from 'reducers/slices/channels';\nimport messages from 'reducers/slices/messages';\nimport appStatus from 'reducers/slices/appStatus';\n\nexport default combineReducers({\n  users,\n  channels,\n  messages,\n  appStatus\n});\n","import 'styles/reset.scss';\nimport 'styles/global.scss';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { configureStore } from '@reduxjs/toolkit';\nimport rootReducer from 'reducers/rootReducer';\nimport thunk from 'redux-thunk';\nconst store = configureStore({ reducer: rootReducer, middleware: [thunk] });\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}